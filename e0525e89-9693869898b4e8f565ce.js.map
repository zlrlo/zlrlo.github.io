{"version":3,"file":"e0525e89-9693869898b4e8f565ce.js","mappings":"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","sources":["webpack://blog/./src/templates/post.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { graphql, Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport * as _ from 'lodash';\nimport { lighten, setLightness } from 'polished';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav, { SiteNavMain } from '../components/header/SiteNav';\nimport PostContent from '../components/PostContent';\nimport { ReadNext } from '../components/ReadNext';\nimport { Subscribe } from '../components/subscribe/Subscribe';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport { colors } from '../styles/colors';\nimport { inner, outer, SiteMain } from '../styles/shared';\nimport config from '../website-config';\nimport { AuthorList } from '../components/AuthorList';\n\nexport interface Author {\n  id: string;\n  bio: string;\n  avatar: {\n    children: Array<{\n      fluid: FluidObject;\n    }>;\n  };\n}\n\ninterface PageTemplateProps {\n  location: Location;\n  data: {\n    logo: {\n      childImageSharp: {\n        fixed: any;\n      };\n    };\n    markdownRemark: {\n      html: string;\n      htmlAst: any;\n      excerpt: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        userDate: string;\n        image: {\n          childImageSharp: {\n            fluid: any;\n          };\n        };\n        excerpt: string;\n        tags: string[];\n        author: Author[];\n      };\n      fields: {\n        readingTime: {\n          text: string;\n        };\n      };\n    };\n    relatedPosts: {\n      totalCount: number;\n      edges: Array<{\n        node: {\n          timeToRead: number;\n          frontmatter: {\n            title: string;\n            date: string;\n          };\n          fields: {\n            slug: string;\n          };\n        };\n      }>;\n    };\n  };\n  pageContext: {\n    prev: PageContext;\n    next: PageContext;\n  };\n}\n\nexport interface PageContext {\n  excerpt: string;\n  fields: {\n    slug: string;\n    readingTime: {\n      text: string;\n    };\n  };\n  frontmatter: {\n    image: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    excerpt: string;\n    title: string;\n    date: string;\n    draft?: boolean;\n    tags: string[];\n    author: Author[];\n  };\n}\n\nconst PageTemplate = ({ data, pageContext, location }: PageTemplateProps) => {\n  const post = data.markdownRemark;\n  let width = '';\n  let height = '';\n  if (post.frontmatter.image?.childImageSharp) {\n    width = post.frontmatter.image.childImageSharp.fluid.sizes.split(', ')[1].split('px')[0];\n    height = String(Number(width) / post.frontmatter.image.childImageSharp.fluid.aspectRatio);\n  }\n\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <IndexLayout className=\"post-template\">\n      <Helmet>\n        <html lang={config.lang} />\n        <title>{post.frontmatter.title}</title>\n\n        <meta name=\"description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"article\" />\n        <meta property=\"og:title\" content={post.frontmatter.title} />\n        <meta property=\"og:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            property=\"og:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta property=\"article:published_time\" content={post.frontmatter.date} />\n        {/* not sure if modified time possible */}\n        {/* <meta property=\"article:modified_time\" content=\"2018-08-20T15:12:00.000Z\" /> */}\n        {post.frontmatter.tags && (\n          <meta property=\"article:tag\" content={post.frontmatter.tags[0]} />\n        )}\n\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        {config.facebook && <meta property=\"article:author\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={post.frontmatter.title} />\n        <meta name=\"twitter:description\" content={post.frontmatter.excerpt || post.excerpt} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {post.frontmatter.image?.childImageSharp && (\n          <meta\n            name=\"twitter:image\"\n            content={`${config.siteUrl}${post.frontmatter.image.childImageSharp.fluid.src}`}\n          />\n        )}\n        <meta name=\"twitter:label1\" content=\"Written by\" />\n        <meta name=\"twitter:data1\" content={post.frontmatter.author[0].id} />\n        <meta name=\"twitter:label2\" content=\"Filed under\" />\n        {post.frontmatter.tags && <meta name=\"twitter:data2\" content={post.frontmatter.tags[0]} />}\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {config.twitter && (\n          <meta\n            name=\"twitter:creator\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n        {width && <meta property=\"og:image:width\" content={width} />}\n        {height && <meta property=\"og:image:height\" content={height} />}\n      </Helmet>\n      <Wrapper css={PostTemplate}>\n        <header className=\"site-header\">\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isPost post={post.frontmatter} />\n            </div>\n          </div>\n        </header>\n        <main id=\"site-main\" className=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            {/* TODO: no-image css tag? */}\n            <article css={[PostFull, !post.frontmatter.image && NoImage]}>\n              <PostFullHeader className=\"post-full-header\">\n                <PostFullTags className=\"post-full-tags\">\n                  {post.frontmatter.tags && post.frontmatter.tags.length > 0 && (\n                    <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                      {post.frontmatter.tags[0]}\n                    </Link>\n                  )}\n                </PostFullTags>\n                <PostFullTitle className=\"post-full-title\">{post.frontmatter.title}</PostFullTitle>\n                <PostFullCustomExcerpt className=\"post-full-custom-excerpt\">\n                  {post.frontmatter.excerpt}\n                </PostFullCustomExcerpt>\n                <PostFullByline className=\"post-full-byline\">\n                  <section className=\"post-full-byline-content\">\n                    <AuthorList authors={post.frontmatter.author} tooltip=\"large\" />\n                    <section className=\"post-full-byline-meta\">\n                      <h4 className=\"author-name\">\n                        {post.frontmatter.author.map(author => (\n                          <Link key={author.id} to={`/author/${_.kebabCase(author.id)}/`}>\n                            {author.id}\n                          </Link>\n                        ))}\n                      </h4>\n                      <div className=\"byline-meta-content\">\n                        <time className=\"byline-meta-date\" dateTime={datetime}>\n                          {displayDatetime}\n                        </time>\n                        <span className=\"byline-reading-time\">\n                          <span className=\"bull\">&bull;</span>\n                          {post.fields.readingTime.text}\n                        </span>\n                      </div>\n                    </section>\n                  </section>\n                </PostFullByline>\n              </PostFullHeader>\n\n              {post.frontmatter.image?.childImageSharp && (\n                <PostFullImage>\n                  <Img\n                    style={{ height: '100%' }}\n                    fluid={post.frontmatter.image.childImageSharp.fluid}\n                    alt={post.frontmatter.title}\n                  />\n                </PostFullImage>\n              )}\n              <PostContent htmlAst={post.htmlAst} />\n\n              {/* The big email subscribe modal content */}\n              {config.showSubscribe && <Subscribe title={config.title} />}\n            </article>\n          </div>\n        </main>\n\n        <ReadNext\n          currentPageSlug={location.pathname}\n          tags={post.frontmatter.tags}\n          relatedPosts={data.relatedPosts}\n          pageContext={pageContext}\n        />\n\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nconst PostTemplate = css`\n  .site-main {\n    margin-top: 64px;\n    background: #fff;\n    padding-bottom: 4vw;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .site-main {\n      /* background: var(--darkmode); */\n      background: ${colors.darkmode};\n    }\n  }\n`;\n\nexport const PostFull = css`\n  position: relative;\n  z-index: 50;\n`;\n\nexport const NoImage = css`\n  .post-full-content {\n    padding-top: 0;\n  }\n\n  .post-full-content:before,\n  .post-full-content:after {\n    display: none;\n  }\n`;\n\nexport const PostFullHeader = styled.header`\n  position: relative;\n  margin: 0 auto;\n  padding: 70px 170px 50px;\n  border-top-left-radius: 3px;\n  border-top-right-radius: 3px;\n\n  @media (max-width: 1170px) {\n    padding: 60px 11vw 50px;\n  }\n\n  @media (max-width: 800px) {\n    padding-right: 5vw;\n    padding-left: 5vw;\n  }\n\n  @media (max-width: 500px) {\n    padding: 20px 0 35px;\n  }\n`;\n\nconst PostFullTags = styled.section`\n  display: flex;\n  justify-content: flex-start;\n  align-items: center;\n  /* color: var(--midgrey); */\n  color: ${colors.midgrey};\n  font-size: 1.3rem;\n  line-height: 1.4em;\n  font-weight: 600;\n  text-transform: uppercase;\n`;\n\nconst PostFullCustomExcerpt = styled.p`\n  margin: 20px 0 0;\n  color: var(--midgrey);\n  font-family: Georgia, serif;\n  font-size: 2.3rem;\n  line-height: 1.4em;\n  font-weight: 300;\n\n  @media (max-width: 500px) {\n    font-size: 1.9rem;\n    line-height: 1.5em;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n  }\n`;\n\nconst PostFullByline = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 35px 0 0;\n  padding-top: 15px;\n  /* border-top: 1px solid color(var(--lightgrey) l(+10%)); */\n  border-top: 1px solid ${lighten('0.1', colors.lightgrey)};\n\n  .post-full-byline-content {\n    flex-grow: 1;\n    display: flex;\n    align-items: flex-start;\n  }\n\n  .post-full-byline-content .author-list {\n    justify-content: flex-start;\n    padding: 0 12px 0 0;\n  }\n\n  .post-full-byline-meta {\n    margin: 2px 0 0;\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)};\n    font-size: 1.2rem;\n    line-height: 1.2em;\n    letter-spacing: 0.2px;\n    text-transform: uppercase;\n  }\n\n  .post-full-byline-meta h4 {\n    margin: 0 0 3px;\n    font-size: 1.3rem;\n    line-height: 1.4em;\n    font-weight: 500;\n  }\n\n  .post-full-byline-meta h4 a {\n    /* color: color(var(--darkgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.darkgrey)};\n  }\n\n  .post-full-byline-meta h4 a:hover {\n    /* color: var(--darkgrey); */\n    color: ${colors.darkgrey};\n  }\n\n  .post-full-byline-meta .bull {\n    display: inline-block;\n    margin: 0 4px;\n    opacity: 0.6;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    /* border-top-color: color(var(--darkmode) l(+15%)); */\n    border-top-color: ${lighten('0.15', colors.darkmode)};\n\n    .post-full-byline-meta h4 a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n\n    .post-full-byline-meta h4 a:hover {\n      color: #fff;\n    }\n  }\n`;\n\nexport const PostFullTitle = styled.h1`\n  margin: 0 0 0.2em;\n  color: ${setLightness('0.05', colors.darkgrey)};\n  word-break: keep-all;\n  @media (max-width: 500px) {\n    margin-top: 0.2em;\n    font-size: 3.3rem;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.9);\n  }\n`;\n\nconst PostFullImage = styled.figure`\n  margin: 25px 0 50px;\n  height: 400px;\n  background: ${colors.lightgrey} center center;\n  background-size: cover;\n  border-radius: 5px;\n\n  @media (max-width: 1170px) {\n    margin: 25px -6vw 50px;\n    border-radius: 0;\n    img {\n      max-width: 1170px;\n    }\n  }\n\n  @media (max-width: 800px) {\n    height: 400px;\n  }\n  @media (max-width: 500px) {\n    margin-bottom: 4vw;\n    height: 350px;\n  }\n`;\n\nexport const query = graphql`\n  query($slug: String, $primaryTag: String) {\n    logo: file(relativePath: { eq: \"img/ghost-logo.png\" }) {\n      childImageSharp {\n        fixed {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      htmlAst\n      excerpt\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        userDate: date(formatString: \"D MMMM YYYY\")\n        date\n        tags\n        excerpt\n        image {\n          childImageSharp {\n            fluid(maxWidth: 3720) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        author {\n          id\n          bio\n          avatar {\n            children {\n              ... on ImageSharp {\n                fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    relatedPosts: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$primaryTag] }, draft: { ne: true } } }\n      limit: 5\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          frontmatter {\n            title\n            date\n          }\n          fields {\n            readingTime {\n              text\n            }\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default PageTemplate;\n"],"names":["PostTemplate","css","colors","PostFull","NoImage","PostFullHeader","PostFullTags","PostFullCustomExcerpt","lighten","PostFullByline","PostFullTitle","setLightness","PostFullImage","_ref","data","pageContext","location","post","markdownRemark","width","height","frontmatter","image","_post$frontmatter$ima","childImageSharp","fluid","sizes","split","String","Number","aspectRatio","date","Date","datetime","format","displayDatetime","___EmotionJSX","IndexLayout","className","Helmet","lang","config","title","name","content","excerpt","property","pathname","src","tags","author","id","Wrapper","outer","SiteNavMain","inner","SiteNav","isPost","SiteMain","length","Link","to","_kebabCase","AuthorList","authors","tooltip","map","key","dateTime","fields","readingTime","text","Img","style","alt","PostContent","htmlAst","Subscribe","ReadNext","currentPageSlug","relatedPosts","Footer"],"sourceRoot":""}