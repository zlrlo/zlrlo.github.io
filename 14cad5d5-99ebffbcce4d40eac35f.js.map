{"version":3,"file":"14cad5d5-99ebffbcce4d40eac35f.js","mappings":"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","sources":["webpack://blog/./src/components/PostCard.tsx"],"sourcesContent":["import { format } from 'date-fns';\nimport { Link } from 'gatsby';\nimport Img from 'gatsby-image';\nimport _ from 'lodash';\nimport { lighten } from 'polished';\nimport React from 'react';\n\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport { colors } from '../styles/colors';\nimport { PageContext } from '../templates/post';\nimport { AuthorList } from './AuthorList';\n\nexport interface PostCardProps {\n  post: PageContext;\n  large?: boolean;\n}\n\nexport const PostCard: React.FC<PostCardProps> = ({ post, large = false }) => {\n  const date = new Date(post.frontmatter.date);\n  // 2018-08-20\n  const datetime = format(date, 'yyyy-MM-dd');\n  // 20 AUG 2018\n  const displayDatetime = format(date, 'dd LLL yyyy');\n\n  return (\n    <article\n      className={`post-card ${post.frontmatter.image ? '' : 'no-image'} ${\n        large ? 'post-card-large' : ''\n      }`}\n      css={[PostCardStyles, large && PostCardLarge]}\n    >\n      {post.frontmatter.image && (\n        <Link className=\"post-card-image-link\" css={PostCardImageLink} to={post.fields.slug}>\n          <PostCardImage className=\"post-card-image\">\n            {post.frontmatter?.image?.childImageSharp?.fluid && (\n              <Img\n                alt={`${post.frontmatter.title} cover image`}\n                style={{ height: '100%' }}\n                fluid={post.frontmatter.image.childImageSharp.fluid}\n              />\n            )}\n          </PostCardImage>\n        </Link>\n      )}\n      <PostCardContent className=\"post-card-content\">\n        <Link className=\"post-card-content-link\" css={PostCardContentLink} to={post.fields.slug}>\n          <PostCardHeader className=\"post-card-header\">\n            {post.frontmatter.tags && (\n              <PostCardPrimaryTag className=\"post-card-primary-tag\">\n                <Link to={`/tags/${_.kebabCase(post.frontmatter.tags[0])}/`}>\n                  {post.frontmatter.tags[0]}\n                </Link>\n              </PostCardPrimaryTag>\n            )}\n            <PostCardTitle className=\"post-card-title\">{post.frontmatter.title}</PostCardTitle>\n          </PostCardHeader>\n          <PostCardExcerpt className=\"post-card-excerpt\">\n            <p>{post.frontmatter.excerpt || post.excerpt}</p>\n          </PostCardExcerpt>\n        </Link>\n        <PostCardMeta className=\"post-card-meta\">\n          <AuthorList authors={post.frontmatter.author} tooltip=\"small\" />\n          <PostCardBylineContent className=\"post-card-byline-content\">\n            <span>\n              {post.frontmatter.author.map((author, index) => {\n                return (\n                  <React.Fragment key={author.id}>\n                    <Link to={`/author/${_.kebabCase(author.id)}/`}>{author.id}</Link>\n                    {post.frontmatter.author.length - 1 > index && ', '}\n                  </React.Fragment>\n                );\n              })}\n            </span>\n            <span className=\"post-card-byline-date\">\n              <time dateTime={datetime}>{displayDatetime}</time>{' '}\n              <span className=\"bull\">&bull;</span> {post.fields.readingTime.text}\n            </span>\n          </PostCardBylineContent>\n        </PostCardMeta>\n      </PostCardContent>\n    </article>\n  );\n};\n\nconst PostCardStyles = css`\n  position: relative;\n  flex: 1 1 301px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  margin: 0 0 40px;\n  padding: 0 20px 40px;\n  min-height: 220px;\n  background-size: cover;\n`;\n\nconst PostCardLarge = css`\n  @media (min-width: 795px) {\n    flex: 1 1 100%;\n    flex-direction: row;\n    padding-bottom: 40px;\n    min-height: 280px;\n    border-top: 0;\n\n    :not(.no-image) .post-card-header {\n      margin-top: 0;\n    }\n\n    .post-card-image-link {\n      position: relative;\n      flex: 1 1 auto;\n      margin-bottom: 0;\n      min-height: 380px;\n    }\n\n    .post-card-image {\n      position: absolute;\n      width: 100%;\n      height: 100%;\n    }\n\n    .post-card-content {\n      flex: 0 1 361px;\n      justify-content: center;\n    }\n\n    .post-card-title {\n      margin-top: 0;\n      font-size: 3.2rem;\n      word-break: keep-all;\n    }\n\n    .post-card-content-link {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-meta {\n      padding: 0 0 0 40px;\n    }\n\n    .post-card-excerpt p {\n      margin-bottom: 1.5em;\n      font-size: 1.8rem;\n      line-height: 1.5em;\n    }\n  }\n`;\n\nconst PostCardImageLink = css`\n  position: relative;\n  display: block;\n  overflow: hidden;\n  border-radius: 5px 5px 0 0;\n`;\n\nconst PostCardImage = styled.div`\n  width: auto;\n  height: 200px;\n  background: ${colors.lightgrey} no-repeat center center;\n  background-size: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n\nconst PostCardContent = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst PostCardContentLink = css`\n  position: relative;\n  display: block;\n  /* color: var(--darkgrey); */\n  color: ${colors.darkgrey};\n\n  :hover {\n    text-decoration: none;\n  }\n`;\n\nconst PostCardPrimaryTag = styled.div`\n  margin: 0 0 0.2em;\n  /* color: var(--blue); */\n  color: ${colors.blue};\n  font-size: 1.2rem;\n  font-weight: 500;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n`;\n\nconst PostCardTitle = styled.h2`\n  margin: 0 0 0.4em;\n  line-height: 1.15em;\n  transition: color 0.2s ease-in-out;\n  word-break: keep-all;\n\n  @media (prefers-color-scheme: dark) {\n    color: rgba(255, 255, 255, 0.85);\n  }\n`;\n\nconst PostCardExcerpt = styled.section`\n  font-family: 'Noto Sans KR', sans-serif;\n  word-break: keep-all;\n\n  @media (prefers-color-scheme: dark) {\n    /* color: color(var(--midgrey) l(+10%)); */\n    color: ${lighten('0.1', colors.midgrey)} !important;\n  }\n`;\n\nconst PostCardMeta = styled.footer`\n  display: flex;\n  align-items: flex-start;\n  padding: 0;\n`;\n\nconst PostCardBylineContent = styled.div`\n  flex: 1 1 50%;\n  display: flex;\n  flex-direction: column;\n  margin: 4px 0 0 10px;\n  /* color: color(var(--midgrey) l(+10%)); */\n  color: ${lighten('0.1', colors.midgrey)};\n  font-size: 1.2rem;\n  line-height: 1.4em;\n  font-weight: 400;\n  letter-spacing: 0.2px;\n  text-transform: uppercase;\n\n  span {\n    margin: 0;\n  }\n\n  a {\n    /* color: color(var(--darkgrey) l(+20%)); */\n    color: ${lighten('0.2', colors.darkgrey)};\n    font-weight: 600;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    a {\n      color: rgba(255, 255, 255, 0.75);\n    }\n  }\n`;\n\nconst PostCardHeader = styled.header`\n  margin: 15px 0 0;\n`;\n\nexport const StaticAvatar = css`\n  display: block;\n  overflow: hidden;\n  margin: 0 0 0 -6px;\n  width: 34px;\n  height: 34px;\n  border: #fff 2px solid;\n  border-radius: 100%;\n\n  @media (prefers-color-scheme: dark) {\n    /* border-color: color(var(--darkgrey) l(+2%)); */\n    border-color: ${lighten('0.02', colors.darkgrey)};\n  }\n`;\n\nexport const AuthorProfileImage = css`\n  display: block;\n  width: 100%;\n  height: 100%;\n  /* background: color(var(--lightgrey) l(+10%)); */\n  background: ${lighten('0.1', colors.lightgrey)};\n  border-radius: 100%;\n  object-fit: cover;\n\n  @media (prefers-color-scheme: dark) {\n    background: ${colors.darkmode};\n  }\n`;\n"],"names":["PostCard","_ref","post","large","date","Date","frontmatter","datetime","format","displayDatetime","___EmotionJSX","className","image","css","PostCardStyles","PostCardLarge","Link","PostCardImageLink","to","fields","slug","PostCardImage","childImageSharp","fluid","Img","alt","title","style","height","PostCardContent","PostCardContentLink","PostCardHeader","tags","PostCardPrimaryTag","_kebabCase","PostCardTitle","PostCardExcerpt","excerpt","PostCardMeta","AuthorList","authors","author","tooltip","PostCardBylineContent","map","index","React","key","id","length","dateTime","readingTime","text","colors","lighten","AuthorProfileImage"],"sourceRoot":""}