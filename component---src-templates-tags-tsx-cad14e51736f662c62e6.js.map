{"version":3,"file":"component---src-templates-tags-tsx-cad14e51736f662c62e6.js","mappings":"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","sources":["webpack://blog/./src/templates/tags.tsx"],"sourcesContent":["import { graphql } from 'gatsby';\nimport React from 'react';\nimport { FluidObject } from 'gatsby-image';\n\nimport { Footer } from '../components/Footer';\nimport SiteNav from '../components/header/SiteNav';\nimport { PostCard } from '../components/PostCard';\nimport { Wrapper } from '../components/Wrapper';\nimport IndexLayout from '../layouts';\nimport {\n  inner,\n  outer,\n  PostFeed,\n  SiteDescription,\n  SiteHeader,\n  SiteHeaderContent,\n  SiteMain,\n  SiteTitle,\n  SiteNavMain,\n  SiteArchiveHeader,\n  ResponsiveHeaderBackground,\n  SiteHeaderBackground,\n} from '../styles/shared';\nimport { PageContext } from './post';\nimport { Helmet } from 'react-helmet';\nimport config from '../website-config';\n\ninterface TagTemplateProps {\n  location: Location;\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allTagYaml: {\n      edges: Array<{\n        node: {\n          id: string;\n          description: string;\n          image?: {\n            childImageSharp: {\n              fluid: FluidObject;\n            };\n          };\n        };\n      }>;\n    };\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: Array<{\n        node: PageContext;\n      }>;\n    };\n  };\n}\n\nconst Tags = ({ pageContext, data, location }: TagTemplateProps) => {\n  const tag = pageContext.tag ? pageContext.tag : '';\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagData = data.allTagYaml.edges.find(\n    n => n.node.id.toLowerCase() === tag.toLowerCase(),\n  );\n\n  return (\n    <IndexLayout>\n      <Helmet>\n        <html lang={config.lang} />\n        <title>\n          {tag} - {config.title}\n        </title>\n        <meta name=\"description\" content={tagData?.node ? tagData.node.description : ''} />\n        <meta property=\"og:site_name\" content={config.title} />\n        <meta property=\"og:type\" content=\"website\" />\n        <meta property=\"og:title\" content={`${tag} - ${config.title}`} />\n        <meta property=\"og:url\" content={config.siteUrl + location.pathname} />\n        {config.facebook && <meta property=\"article:publisher\" content={config.facebook} />}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:title\" content={`${tag} - ${config.title}`} />\n        <meta name=\"twitter:url\" content={config.siteUrl + location.pathname} />\n        {config.twitter && (\n          <meta\n            name=\"twitter:site\"\n            content={`@${config.twitter.split('https://twitter.com/')[1]}`}\n          />\n        )}\n      </Helmet>\n      <Wrapper>\n        <header\n          className=\"site-archive-header\"\n          css={[SiteHeader, SiteArchiveHeader]}\n        >\n          <div css={[outer, SiteNavMain]}>\n            <div css={inner}>\n              <SiteNav isHome={false} />\n            </div>\n          </div>\n          <ResponsiveHeaderBackground\n            css={[outer, SiteHeaderBackground]}\n            backgroundImage={tagData?.node?.image?.childImageSharp?.fluid?.src}\n            className=\"site-header-background\"\n          >\n            <SiteHeaderContent css={inner} className=\"site-header-content\">\n              <SiteTitle className=\"site-title\">{tag}</SiteTitle>\n              <SiteDescription className=\"site-description\">\n                {tagData?.node.description ? (\n                  tagData.node.description\n                ) : (\n                  <>\n                    A collection of {totalCount > 1 && `${totalCount} posts`}\n                    {totalCount === 1 && '1 post'}\n                    {totalCount === 0 && 'No posts'}\n                  </>\n                )}\n              </SiteDescription>\n            </SiteHeaderContent>\n          </ResponsiveHeaderBackground>\n        </header>\n        <main id=\"site-main\" css={[SiteMain, outer]}>\n          <div css={inner}>\n            <div css={[PostFeed]}>\n              {edges.map(({ node }) => (\n                <PostCard key={node.fields.slug} post={node} />\n              ))}\n            </div>\n          </div>\n        </main>\n        <Footer />\n      </Wrapper>\n    </IndexLayout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    allTagYaml {\n      edges {\n        node {\n          id\n          description\n          image {\n            childImageSharp {\n              fluid(maxWidth: 3720) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          frontmatter {\n            title\n            excerpt\n            tags\n            date\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1240) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            author {\n              id\n              bio\n              avatar {\n                children {\n                  ... on ImageSharp {\n                    fluid(quality: 100, srcSetBreakpoints: [40, 80, 120]) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            readingTime {\n              text\n            }\n            layout\n            slug\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","pageContext","data","location","tag","edges","totalCount","allMarkdownRemark","tagData","allTagYaml","find","n","node","id","toLowerCase","___EmotionJSX","IndexLayout","Helmet","lang","config","name","content","description","property","pathname","Wrapper","className","css","SiteHeader","SiteArchiveHeader","outer","SiteNavMain","inner","SiteNav","isHome","ResponsiveHeaderBackground","SiteHeaderBackground","backgroundImage","_tagData$node","image","_tagData$node$image","childImageSharp","_tagData$node$image$c","fluid","_tagData$node$image$c2","src","SiteHeaderContent","SiteTitle","SiteDescription","SiteMain","PostFeed","map","_ref2","PostCard","key","fields","slug","post","Footer"],"sourceRoot":""}